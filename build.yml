version: 0.2

phases:
  install:
    commands:
      - echo "Checking the OS and installing jq..."
      - cat /etc/os-release
      - |
        if [[ -f /etc/os-release ]]; then
          . /etc/os-release
          if [[ "$ID" == "amazon" ]]; then
            # Amazon Linux
            echo "Amazon Linux detected. Installing jq..."
            curl -L -o /tmp/jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
            chmod +x /tmp/jq
            mv /tmp/jq /usr/local/bin/jq
          elif [[ "$ID" == "ubuntu" ]]; then
            # Ubuntu-based system
            echo "Ubuntu detected. Installing jq..."
            sudo apt-get update -y
            sudo apt-get install -y jq
          else
            echo "Unsupported OS. Skipping jq installation."
          fi
        fi
      - echo "jq installation completed."

  pre_build:
    commands:
      - echo "Running pre-build steps..."
      - echo "MYSQL_HOST=localhost" >> ~/.bashrc
      - echo "MYSQL_USER=jyoti_user" >> ~/.bashrc
      - echo "MYSQL_PASSWORD=shpreety2013." >> ~/.bashrc
      - echo "MYSQL_DB=jyoti" >> ~/.bashrc

  build:
    commands:
      - echo "Starting WordPress deployment..."
      - sudo su
      - sudo cp -R wordpress/* /var/www/html/
      - sudo chown -R www-data:www-data /var/www/html/
      - sudo chmod -R 755 /var/www/html/wordpress/
      - sudo mkdir -p /var/www/html/wordpress/wp-content/uploads
      - sudo chown -R www-data:www-data /var/www/html/wordpress/wp-content/uploads/
      - echo "WordPress files deployed successfully."

  post_build:
    commands:
      - echo "Configuring wp-config.php..."
      - sudo sed -i "s/DB_NAME/$MYSQL_DB/g" /var/www/html/wordpress/wp-config.php
      - sudo sed -i "s/DB_USER/$MYSQL_USER/g" /var/www/html/wordpress/wp-config.php
      - sudo sed -i "s/DB_PASSWORD/$MYSQL_PASSWORD/g" /var/www/html/wordpress/wp-config.php
      - sudo sed -i "s/DB_HOST/$MYSQL_HOST/g" /var/www/html/wordpress/wp-config.php
      - echo "wp-config.php configured successfully."
      - echo "Deploying to EC2 instance using SSH..."
      - ssh -i /tmp/id_rsa -o StrictHostKeyChecking=no ec2-user@your-ec2-public-ip "sudo systemctl restart apache2"
      - echo "Deployment completed successfully."

cache:
  paths:
    - /tmp/*
