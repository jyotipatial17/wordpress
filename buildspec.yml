version: 0.2

phases:
  install:
    commands:
      # Skip installing Apache, PHP, and WordPress since they are already pre-configured in the AMI
      - echo "Skipping installation of dependencies as they are already pre-configured in the AMI."
      
  pre_build:
    # Set environment variables for MySQL connection or any other required settings
    commands:
      - echo "Running pre-build steps"
      - echo "MYSQL_HOST=localhost" >> ~/.bashrc
      - echo "MYSQL_USER=jyoti_user" >> ~/.bashrc
      - echo "MYSQL_PASSWORD=shpreety2013." >> ~/.bashrc
      - echo "MYSQL_DB=jyoti" >> ~/.bashrc

  build:
    # Build process (copy custom themes, plugins, etc.)
    commands:
      - echo "Starting WordPress deployment..."
      - cd /tmp

      # Copy updated WordPress files (themes, plugins, etc.) to the correct Apache root
      - sudo cp -R wordpress/* /var/www/html/     # Copy files to Apache root

      # Set correct ownership and permissions for WordPress files
      - sudo chown -R www-data:www-data /var/www/html/
      - sudo chmod -R 755 /var/www/html/wordpress/
      
      # Ensure necessary directories exist and have correct permissions
      - sudo mkdir -p /var/www/html/wordpress/wp-content/uploads
      - sudo chown -R www-data:www-data /var/www/html/wordpress/wp-content/uploads/
      - echo "WordPress files deployed successfully."

  post_build:
    # Post-build actions: configure wp-config.php and restart Apache
    commands:
      - echo "Configuring wp-config.php..."
      
      # Update wp-config.php with the environment variables or hardcoded values
      - sudo sed -i 's/DB_NAME/jyoti/g' /var/www/html/wordpress/wp-config.php
      - sudo sed -i 's/DB_USER/jyoti_user/g' /var/www/html/wordpress/wp-config.php  # Correct format without @localhost
      - sudo sed -i 's/DB_PASSWORD/shpreety2013./g' /var/www/html/wordpress/wp-config.php
      - sudo sed -i 's/DB_HOST/localhost/g' /var/www/html/wordpress/wp-config.php  # Set DB_HOST to localhost (since MySQL is on the same EC2 instance)

      - echo "wp-config.php configured successfully."
      # Use SSM to deploy to the EC2 instance
      - echo "Deploying to EC2 instance using SSM..."
      - >
        INSTANCE_ID=$(aws ec2 describe-instances --query "Reservations[0].Instances[0].InstanceId" --output text --filters "Name=tag:Name,Values=YourEC2InstanceName")
        COMMAND="sudo systemctl restart apache2"
        aws ssm send-command \
          --instance-ids $INSTANCE_ID \
          --document-name "AWS-RunShellScript" \
          --comment "Restart Apache to apply WordPress changes" \
          --parameters 'commands=["'$COMMAND'"]'

      - echo "Deployment completed successfully."

      # Restart Apache to apply changes
      - echo "Restarting Apache web server..."
      - sudo systemctl restart apache2

post_build:
  commands:
    - echo "Deploying to EC2 instance using SSH..."
    - ssh -i /path/to/your/private-key.pem ec2-user@your-ec2-public-ip "sudo systemctl restart apache2"
    - echo "Deployment completed successfully."

cache:
  paths:
    - /tmp/*
